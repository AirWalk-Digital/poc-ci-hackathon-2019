# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:

  terraform_deploy_dev:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          command: |
            cd env/dev
            echo "Current build tag: ${CIRCLE_TAG}"
            export AWS_ACCESS_KEY_ID=$DEV_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$DEV_AWS_SECRET_ACCESS_KEY
            terraform init
            terraform plan -out=tfplan
            terraform apply -auto-approve
      - persist_to_workspace:
              root: .
              paths: 
                - env/dev
                - module

  terraform_config_test:
    docker:
      - image: hashicorp/terraform:light
      steps:
        - attach_workspace:
            at: .
        - run:
            command: |
              wget https://github.com/instrumenta/conftest/releases/download/v0.15.0/conftest_0.15.0_Linux_x86_64.tar.gz
              tar xzf conftest_0.15.0_Linux_x86_64.tar.gz
              sudo mv conftest /usr/local/bin
              terraform show -json ./tfplan > tfplan.json
              conftest test tfplan.json

  terraform_prod_plan:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          command: |
            cd env/prod
            echo "Current build tag: ${CIRCLE_TAG}"
            export AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY
            terraform init
            terraform plan -out prod.plan
      - persist_to_workspace:
              root: .
              paths: env/prod

  terraform_deploy_prod:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            cd env/prod
            export AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY
            terraform apply prod.plan

  terraform_destroy_dev:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            cd env/dev
            export AWS_ACCESS_KEY_ID=$DEV_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$DEV_AWS_SECRET_ACCESS_KEY
            sleep 60
            terraform destroy -auto-approve

workflows:
  version: 2
  build_plan_approve_apply:
    jobs:
      - terraform_deploy_dev
      - terraform_config_test:
          requires:
            - terraform_deploy_dev
      - terraform_prod_plan:
          requires:
            - terraform_config_test
          filters:
            tags:
              only: /^v.*/
      - approve:
          type: approval
          requires:
            - terraform_prod_plan
      - terraform_deploy_prod:
          requires:
            - approve
      - terraform_destroy_dev:
          requires:
            - terraform_deploy_dev
